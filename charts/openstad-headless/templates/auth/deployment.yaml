---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openstad.auth.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openstad.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "openstad.auth.fullname" . }}-deployment
spec:
  replicas: {{ .Values.auth.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.auth.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.auth.label }}
    spec:
      volumes:
        - name: certs
          secret:
            secretName: openstad-auth-certificates
      containers:
      - name: {{ template "openstad.auth.fullname" . }}
        image: {{ .Values.auth.deploymentContainer.image }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: "/opt/openstad-headless/apps/auth-server/certs"
            name: certs
            readOnly: true
        ports:
            - name: http
              containerPort: {{ .Values.auth.service.httpPort }}
        env:
          # HOSTING
          - name: APP_URL
            value: https://{{ template "openstad.auth.url" . }}

          - name: CMS_URL
            value: https://{{ template "openstad.cms.url" . }}

          - name: BASE_DOMAIN
            value: {{ .Values.host.base }}

          - name: PORT
            value: "{{ .Values.auth.service.httpPort }}"

          # MySQL DATABASE
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: username

          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.passwordSecret.fullname" . }}
                key: mysql-password

          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: hostname

          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: hostport

          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.auth.databaseSecret.fullname" . }}
                key: database

          # SMTP MAIL
          - name: MAIL_SERVER_URL
            valueFrom:
              secretKeyRef:
                key: host
                name: {{ template "openstad.email.secret.fullname" . }}

          - name: MAIL_SERVER_PORT
            valueFrom:
              secretKeyRef:
                key: port
                name: {{ template "openstad.email.secret.fullname" . }}

          - name: MAIL_SERVER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: {{ template "openstad.email.secret.fullname" . }}

          - name: MAIL_SERVER_USER_NAME
            valueFrom:
              secretKeyRef:
                key: username
                name: {{ template "openstad.email.secret.fullname" . }}

          - name: MAIL_SERVER_SECURE
            value: "{{ .Values.secrets.mail.auth.secure | default "yes" }}"

          - name: EMAIL_ASSETS_URL
            value: https://{{ template "openstad.auth.url" . }}/email

          - name: FROM_NAME
            value: {{ default .Values.auth.fromName "Openstad api" }}

          - name: FROM_EMAIL
            value: {{ or .Values.auth.fromEmail .Values.secrets.mail.auth.user }}

          - name: AUTH_ADMIN_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: admin_client_id
                name: {{ template "openstad.auth.secret.fullname" . }}

          - name: AUTH_ADMIN_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: admin_client_secret
                name: {{ template "openstad.auth.secret.fullname" . }}

          - name: AUTH_FIRST_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client_id
                name: {{ template "openstad.auth.secret.fullname" . }}

          - name: AUTH_FIRST_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client_secret
                name: {{ template "openstad.auth.secret.fullname" . }}

          - name: AUTH_FIRST_LOGIN_CODE
            valueFrom:
              secretKeyRef:
                key: first_login_token
                name: {{ template "openstad.auth.secret.fullname" . }}

          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                key: secret
                name: {{ template "openstad.session.secret.fullname" . }}

          - name: COOKIE_SECURE_OFF
            value: "{{ .Values.auth.cookie.secureOff | default "no" }}"

          - name: PHONE_HASH_SALT
            valueFrom:
              secretKeyRef:
                key: phone_hash_salt
                name: {{ template "openstad.auth.secret.fullname" . }}

          - name: API_URL
            value: https://{{ template "openstad.api.url" . }}

          - name: ADMIN_URL
            value: https://{{ template  "openstad.admin.url" . }}

          - name: ALLOWED_ADMIN_DOMAINS
            value: '["{{ template  "openstad.admin.url" . }}"]'

          - name: ENVIRONMENT_NAME
            value: {{ .Values.public.environmentName | default "Openstad" | quote }}

          - name: NODE_ENV
            value: production

          - name: RATE_LIMIT
            valueFrom:
              secretKeyRef:
                key: rateLimit
                name: {{ template "openstad.ratelimit.secret.fullname" . }}

          - name: RATE_WINDOW_MS
            valueFrom:
              secretKeyRef:
                key: rateWindowMs
                name: {{ template "openstad.ratelimit.secret.fullname" . }}

          {{- if .Values.auth.extraEnvVars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.auth.extraEnvVars "context" $) | nindent 10 }}
          {{- end }}
        {{- if .Values.auth.customCommand }}
        command: {{ toYaml .Values.auth.customCommand | nindent 12 }}
        {{- end }}
        {{- if .Values.auth.customWorkingDir }}
        workingDir: {{ .Values.auth.customWorkingDir }}
        {{- end }}
        resources:
{{ toYaml .Values.auth.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.auth.service.httpPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: {{ .Values.auth.service.httpPort }}
          initialDelaySeconds: {{ .Values.auth.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.auth.probe.liveness.periodSeconds }}
      initContainers:
      - name: init-db-ready
        image: {{ .Values.auth.deploymentContainer.image }}
        command: ["/bin/bash", "-c"]
        args:
          - nc $DB_HOST $DB_PORT -z -w1 && npm run init-database -w apps/auth-server -- --only-if-empty && npm run migrate-database -w apps/auth-server
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: username

          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.passwordSecret.fullname" . }}
                key: mysql-password

          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: hostname

          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: hostport

          - name: DB_MAX_POOL_SIZE
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.database.credentialsSecret.fullname" . }}
                key: maxPoolSize

          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ template "openstad.auth.databaseSecret.fullname" . }}
                key: database
